# Generated by Django 3.1.6 on 2021-02-19 18:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='access_groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='Информация о группе доступа')),
            ],
        ),
        migrations.CreateModel(
            name='cardiac_pathology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название патологии', max_length=100, unique=True)),
                ('short_name', models.CharField(blank=True, help_text='Короткое название', max_length=20, null=True)),
            ],
            options={
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='ecg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_date', models.DateField(blank=True, help_text='Дата снятия показаний', null=True)),
                ('add_date', models.DateField(auto_now_add=True, help_text='Дата внесения в систему')),
                ('patient_age', models.IntegerField(blank=True, help_text='Возраст пациэнта на момент снятия показаний(для показаний не имеющих даты рождения пациента)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(150)])),
                ('access_id', models.ForeignKey(blank=True, help_text='Группа доступа к которой принадлежит экг', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecg_storage.access_groups')),
            ],
            options={
                'ordering': ['-add_date'],
            },
        ),
        migrations.CreateModel(
            name='patients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(choices=[('N', 'Не задан'), ('M', 'Мужской'), ('F', 'Женский')], default='N', help_text='Пол пациента', max_length=1)),
                ('birthdate', models.DateField(blank=True, help_text='Дата рождения', null=True)),
                ('name', models.CharField(blank=True, help_text='Имя', max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, help_text='Фамилия', max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, help_text='Отчество', max_length=50, null=True)),
            ],
            options={
                'ordering': ['-birthdate'],
            },
        ),
        migrations.CreateModel(
            name='source_org',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название организации', max_length=200, unique=True)),
                ('description', models.TextField(blank=True, help_text='Дополнительная информация об организации', null=True)),
            ],
            options={
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='user_access',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecg_storage.access_groups')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='original_information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idMedServ', models.CharField(max_length=20)),
                ('patientId', models.CharField(max_length=20)),
                ('result', models.TextField()),
                ('ecg_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecg_storage.ecg')),
            ],
        ),
        migrations.CreateModel(
            name='ecg_tasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ecg_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecg_storage.ecg')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ecg_files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(blank=True, help_text='Тип файла', max_length=20, null=True)),
                ('file_name', models.CharField(help_text='Имя объекта в MinIo', max_length=1024, unique=True)),
                ('sample_frequency', models.IntegerField()),
                ('amplitude_resolution', models.IntegerField()),
                ('ecg_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecg_storage.ecg')),
            ],
            options={
                'ordering': ['-file_name'],
            },
        ),
        migrations.CreateModel(
            name='ecg_conclusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateField(auto_now_add=True, help_text='Дата вынесения заключения')),
                ('comment', models.TextField(blank=True, help_text='Текстовое заключение', null=True)),
                ('ecg_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecg_storage.ecg')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_time'],
            },
        ),
        migrations.AddField(
            model_name='ecg',
            name='org_id',
            field=models.ForeignKey(blank=True, help_text='Организация от которой получено экг', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecg_storage.source_org'),
        ),
        migrations.AddField(
            model_name='ecg',
            name='patient_id',
            field=models.ForeignKey(blank=True, help_text='Пациент которому принадлежит экг', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecg_storage.patients'),
        ),
        migrations.AddField(
            model_name='ecg',
            name='source_user',
            field=models.ForeignKey(blank=True, help_text='Пользователь, загрузивший экг на сайт', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='conclusion_pathology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conclusion_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecg_storage.ecg_conclusion')),
                ('pathology_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecg_storage.cardiac_pathology')),
            ],
        ),
    ]
