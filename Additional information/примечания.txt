Параметры и их местоположение

docker-compose_dev.yml - compose файл для запуска в отладочном режиме(используя встроенный веб сервер django)
sudo docker-compose -f docker-compose_dev.yml build
sudo docker-compose -f docker-compose_dev.yml up -d

Перед запуском сервера в неотладочном режиме изменить в
minio_ecg/minio_ecg/settings.py
параметр DEBUG на False

Запуск в неотладочном режиме
sudo docker-compose build
sudo docker-compose up -d

после первого запуска в неотладочном режиме подключиться к консоли django контейнера и выполнить
python /code/bucket_create.py
python /code/manage.py collectstatic --noinput
python /code/manage.py migrate
python /code/manage.py createsuperuser --noinput

postgres
логин пароль задаются в compose файле в env сервиса в POSTGRES_USER и POSTGRES_PASSWORD
используются в minio_ecg/minio_ecg/settings.py DATABASES
имя базы данных задаётся в config/pg-setup.sql
используется в minio_ecg/minio_ecg/settings.py DATABASES
хост и порт базы данных используются в minio_ecg/minio_ecg/settings.py DATABASES
порт по умолчанию, хост задаётся именем сервиса в compose. считается что доступ к базе данных откуда либо кроме других контейнеров не нужен(порт не пробрасывается)

minio
MINIO_ACCESS_KEY и MINIO_SECRET_KEY задаются в compose файле в env сервиса
используются в minio_ecg/minio_ecg/settings.py MINIO_ACCESS_KEY и MINIO_SECRET_KEY
используются в minio_ecg/bucket_create.py в access_key и secret_key
имя bucket задаётся в minio_ecg/bucket_create.py bucket_name
используется в minio_ecg/minio_ecg/settings.py MINIO_ECG_BUCKET
в minio_ecg/bucket_create.py может быть использован как внешний адрес minio сервера так и внутренний(по имени сервиса в compose)
в minio_ecg/minio_ecg/settings.py MINIO_URL должен быть использован внешний адрес minio сервера, доступный для пользователя
перед запуском севрера в неотладочном режиме необходимо настроить сертификаты для MinIo и изменить secure в minio_ecg/bucket_create.py и MINIO_SECURE в minio_ecg/minio_ecg/settings.py на True

